{"version":3,"sources":["../../src/addon/axifications/pages/list/list.module.ts","../../src/addon/axifications/components/components.module.ts","../../src/addon/axifications/components/actions/actions.ts","../../src/addon/axifications/pages/list/list.ts"],"names":[],"mappings":"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","file":"3.js","sourcesContent":["// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { CoreComponentsModule } from '@components/components.module';\r\nimport { CoreDirectivesModule } from '@directives/directives.module';\r\nimport { CorePipesModule } from '@pipes/pipes.module';\r\nimport { AddonAxificationsComponentsModule } from '../../components/components.module';\r\nimport { AddonAxificationsListPage } from './list';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonAxificationsListPage,\r\n    ],\r\n    imports: [\r\n        CoreComponentsModule,\r\n        CoreDirectivesModule,\r\n        CorePipesModule,\r\n        IonicPageModule.forChild(AddonAxificationsListPage),\r\n        TranslateModule.forChild(),\r\n        AddonAxificationsComponentsModule,\r\n    ],\r\n})\r\nexport class AddonAxificationsListPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/axifications/pages/list/list.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { IonicModule } from 'ionic-angular';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { AddonAxificationsActionsComponent } from './actions/actions';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        AddonAxificationsActionsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        IonicModule,\r\n        TranslateModule.forChild(),\r\n    ],\r\n    providers: [\r\n    ],\r\n    exports: [\r\n        AddonAxificationsActionsComponent\r\n    ],\r\n})\r\nexport class AddonAxificationsComponentsModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/axifications/components/components.module.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component, Input, OnInit } from '@angular/core';\r\nimport { CoreContentLinksDelegate, CoreContentLinksAction } from '@core/contentlinks/providers/delegate';\r\n\r\n/**\r\n * Component that displays the actions for a axification.\r\n */\r\n@Component({\r\n    selector: 'addon-axifications-actions',\r\n    templateUrl: 'addon-axifications-actions.html',\r\n})\r\nexport class AddonAxificationsActionsComponent implements OnInit {\r\n    @Input() contextUrl: string;\r\n    @Input() courseId: number;\r\n\r\n    actions: CoreContentLinksAction[] = [];\r\n\r\n    constructor(private contentLinksDelegate: CoreContentLinksDelegate) {}\r\n\r\n    /**\r\n     * Component being initialized.\r\n     */\r\n    ngOnInit(): void {\r\n        this.contentLinksDelegate.getActionsFor(this.contextUrl, this.courseId).then((actions) => {\r\n            this.actions = actions;\r\n        });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/axifications/components/actions/actions.ts","// (C) Copyright 2015 Martin Dougiamas\r\n//\r\n// Licensed under the Apache License, Version 2.0 (the \"License\");\r\n// you may not use this file except in compliance with the License.\r\n// You may obtain a copy of the License at\r\n//\r\n//     http://www.apache.org/licenses/LICENSE-2.0\r\n//\r\n// Unless required by applicable law or agreed to in writing, software\r\n// distributed under the License is distributed on an \"AS IS\" BASIS,\r\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n// See the License for the specific language governing permissions and\r\n// limitations under the License.\r\n\r\nimport { Component } from '@angular/core';\r\nimport { IonicPage, NavParams } from 'ionic-angular';\r\nimport { Subscription } from 'rxjs';\r\nimport { CoreDomUtilsProvider } from '@providers/utils/dom';\r\nimport { CoreTextUtilsProvider } from '@providers/utils/text';\r\nimport { CoreEventsProvider, CoreEventObserver } from '@providers/events';\r\nimport { CoreSitesProvider } from '@providers/sites';\r\nimport { CoreUtilsProvider } from '@providers/utils/utils';\r\nimport { AddonAxificationsProvider } from '../../providers/axifications';\r\nimport { AddonPushNotificationsDelegate } from '@addon/pushnotifications/providers/delegate';\r\n\r\n/**\r\n * Page that displays the list of axifications.\r\n */\r\n@IonicPage({ segment: 'addon-axifications-list' })\r\n@Component({\r\n    selector: 'page-addon-axifications-list',\r\n    templateUrl: 'list.html',\r\n})\r\nexport class AddonAxificationsListPage {\r\n\r\n    axifications = [];\r\n    axificationsLoaded = false;\r\n    canLoadMore = false;\r\n    canMarkAllAxificationsAsRead = false;\r\n    loadingMarkAllAxificationsAsRead = false;\r\n\r\n    protected readCount = 0;\r\n    protected unreadCount = 0;\r\n    protected cronObserver: CoreEventObserver;\r\n    protected pushObserver: Subscription;\r\n\r\n    constructor(navParams: NavParams, private domUtils: CoreDomUtilsProvider, private eventsProvider: CoreEventsProvider,\r\n            private sitesProvider: CoreSitesProvider, private textUtils: CoreTextUtilsProvider,\r\n            private utils: CoreUtilsProvider, private axificationsProvider: AddonAxificationsProvider,\r\n            private pushNotificationsDelegate: AddonPushNotificationsDelegate) \r\n\t{\r\n\t\t\t\r\n    }\r\n\r\n    /**\r\n     * View loaded.\r\n     */\r\n    ionViewDidLoad(): void {\r\n        this.fetchAxifications().finally(() => {\r\n            this.axificationsLoaded = true;\r\n        });\r\n\r\n\t\t/*\r\n        this.cronObserver = this.eventsProvider.on(AddonAxificationsProvider.READ_CRON_EVENT, () => this.refreshAxifications(),\r\n                this.sitesProvider.getCurrentSiteId());\r\n\r\n\t\t\t\t\r\n        this.pushObserver = this.pushNotificationsDelegate.on('receive').subscribe((notification) => {\r\n            // New notification received. If it's from current site, refresh the data.\r\n            if (this.utils.isTrueOrOne(notification.notif) && this.sitesProvider.isCurrentSite(notification.site)) {\r\n                this.refreshAxifications();\r\n            }\r\n        });\r\n\t\t*/\r\n\t\t\r\n\t\tjQuery( document ).ready(function() {\r\n\t\t\tconsole.log( \"ax ready!\" );\r\n\t\t\t//alert(\"axification READY\");\r\n\t\t});\t\t\r\n    }\r\n\r\n    /**\r\n     * Convenience function to get axifications. Gets unread axifications first.\r\n     *\r\n     * @param {boolean} refreh Whether we're refreshing data.\r\n     * @return {Promise<any>} Resolved when done.\r\n     */\r\n    protected fetchAxifications(refresh?: boolean): Promise<any> {\r\n        if (refresh) {\r\n            this.readCount = 0;\r\n            this.unreadCount = 0;\r\n        }\r\n\r\n        const limit = AddonAxificationsProvider.LIST_LIMIT;\r\n\r\n        return this.axificationsProvider.getUnreadAxifications(this.unreadCount, limit).then((unread) => {\r\n            const promises = [];\r\n\r\n            unread.forEach(this.formatText.bind(this));\r\n\r\n            /* Don't add the unread axifications to this.axifications yet. If there are no unread axifications\r\n               that causes that the \"There are no axifications\" message is shown in pull to refresh. */\r\n            this.unreadCount += unread.length;\r\n\r\n            if (unread.length < limit) {\r\n                // Limit not reached. Get read axifications until reach the limit.\r\n                const readLimit = limit - unread.length;\r\n                promises.push(this.axificationsProvider.getReadAxifications(this.readCount, readLimit).then((read) => {\r\n                    read.forEach(this.formatText.bind(this));\r\n                    this.readCount += read.length;\r\n                    if (refresh) {\r\n                        this.axifications = unread.concat(read);\r\n                    } else {\r\n                        this.axifications = this.axifications.concat(unread, read);\r\n                    }\r\n                    this.canLoadMore = read.length >= readLimit;\r\n                }).catch((error) => {\r\n                    if (unread.length == 0) {\r\n\t\t\t\t\t\t//alert(\"ax error\");\r\n                        this.domUtils.showErrorModalDefault(error, 'addon.axifications.errorgetaxifications', true);\r\n                        this.canLoadMore = false; // Set to false to prevent infinite calls with infinite-loading.\r\n                    }\r\n                }));\r\n            } else {\r\n                if (refresh) {\r\n                    this.axifications = unread;\r\n                } else {\r\n                    this.axifications = this.axifications.concat(unread);\r\n                }\r\n                this.canLoadMore = true;\r\n            }\r\n\r\n            return Promise.all(promises).then(() => {\r\n                // Mark retrieved axifications as read if they are not.\r\n                this.markAxificationsAsRead(unread);\r\n            });\r\n        }).catch((error) => {\r\n            this.domUtils.showErrorModalDefault(error, 'addon.axifications.errorgetaxifications', true);\r\n            this.canLoadMore = false; // Set to false to prevent infinite calls with infinite-loading.\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mark all axifications as read.\r\n     */\r\n    markAllAxificationsAsRead(): void {\r\n        this.loadingMarkAllAxificationsAsRead = true;\r\n        this.axificationsProvider.markAllAxificationsAsRead().catch(() => {\r\n            // Omit failure.\r\n        }).finally(() => {\r\n            const siteId = this.sitesProvider.getCurrentSiteId();\r\n            this.eventsProvider.trigger(AddonAxificationsProvider.READ_CHANGED_EVENT, null, siteId);\r\n\r\n            this.axificationsProvider.getUnreadAxificationsCount().then((unread) => {\r\n                this.canMarkAllAxificationsAsRead = unread > 0;\r\n                this.loadingMarkAllAxificationsAsRead = false;\r\n            });\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Mark axifications as read.\r\n     *\r\n     * @param {any[]} axifications Array of notification objects.\r\n     */\r\n    protected markAxificationsAsRead(axifications: any[]): void {\r\n        let promise;\r\n\r\n        if (axifications.length > 0) {\r\n            const promises = axifications.map((notification) => {\r\n                return this.axificationsProvider.markNotificationRead(notification.id);\r\n            });\r\n\r\n            promise = Promise.all(promises).catch(() => {\r\n                // Ignore errors.\r\n            }).finally(() => {\r\n                this.axificationsProvider.invalidateAxificationsList().finally(() => {\r\n                    const siteId = this.sitesProvider.getCurrentSiteId();\r\n                    this.eventsProvider.trigger(AddonAxificationsProvider.READ_CHANGED_EVENT, null, siteId);\r\n                });\r\n            });\r\n        } else {\r\n            promise = Promise.resolve();\r\n        }\r\n\r\n        promise.finally(() => {\r\n            // Check if mark all axifications as read is enabled and there are some to read.\r\n            if (this.axificationsProvider.isMarkAllAxificationsAsReadEnabled()) {\r\n                this.loadingMarkAllAxificationsAsRead = true;\r\n\r\n                return this.axificationsProvider.getUnreadAxificationsCount().then((unread) => {\r\n                    this.canMarkAllAxificationsAsRead = unread > 0;\r\n                    this.loadingMarkAllAxificationsAsRead = false;\r\n                });\r\n            }\r\n            this.canMarkAllAxificationsAsRead = false;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Refresh axifications.\r\n     *\r\n     * @param {any} [refresher] Refresher.\r\n     */\r\n    refreshAxifications(refresher?: any): void {\r\n\t\r\n\t\talert(\"hey babe!\");\r\n\t\t\r\n        this.axificationsProvider.invalidateAxificationsList().finally(() => {\r\n            return this.fetchAxifications(true).finally(() => {\r\n                if (refresher) {\r\n                    refresher.complete();\r\n                }\r\n            });\r\n        });\r\n\t\t\r\n    }\r\n\r\n    /**\r\n     * Load more results.\r\n     *\r\n     * @param {any} infiniteScroll The infinit scroll instance.\r\n     */\r\n    loadMoreAxifications(infiniteScroll: any): void {\r\n        this.fetchAxifications().finally(() => {\r\n            infiniteScroll.complete();\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Formats the text of a notification.\r\n     *\r\n     * @param {any} notification The notification object.\r\n     */\r\n    protected formatText(notification: any): void {\r\n        const text = notification.mobiletext.replace(/-{4,}/ig, '');\r\n        notification.mobiletext = this.textUtils.replaceNewLines(text, '<br>');\r\n    }\r\n\r\n    /**\r\n     * Page destroyed.\r\n     */\r\n    ngOnDestroy(): void {\r\n        this.cronObserver && this.cronObserver.off();\r\n        this.pushObserver && this.pushObserver.unsubscribe();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/addon/axifications/pages/list/list.ts"],"sourceRoot":""}